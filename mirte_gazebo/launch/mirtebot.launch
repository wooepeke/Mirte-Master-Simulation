<launch>
    <arg name="initial_pose_x" default="0"/>
    <arg name="initial_pose_y" default="0"/>
    <arg name="initial_pose_z" default="0"/>
    <arg name="initial_pose_yaw" default="0"/>
    <arg name="robot_name" default="mirtebot"/>
    <arg name="id" default="0"/>
  
    <arg name="uid" value="$(arg robot_name)_$(arg id)"/>    
    
    <arg name="cmd_vel_topic" default="$(arg uid)/mobile_base_controller/cmd_vel" />
    <arg name="odom_topic" default="odom" />

    <!-- Initial position of the robot, can be anything -->
    <arg name="init_pose" value="-x $(arg initial_pose_x) -y $(arg initial_pose_y) -z $(arg initial_pose_z) -Y $(arg initial_pose_yaw)" />
  
    <!-- Load the URDF into the ROS Parameter Server -->
    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find mirte_description)/urdf/mirtebot.xacro' robot_tf_prefix:=$(arg uid)"/>

    <!-- Gazebo model spawner -->
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" 
      args="$(arg init_pose) -urdf -model $(arg uid) -param robot_description " respawn="false" output="screen">
    </node>

    <!-- Loads controller data, make sure to set the frame params correctly -->
    <rosparam command="load" file="$(find mirte_description)/config/control_skiddiff.yaml"/>
    <param name="mobile_base_controller/odom_frame_id" type="string" value="$(arg uid)/odom"/>
    <param name="mobile_base_controller/base_frame_id" type="string" value="$(arg uid)/base_link"/>

    <!-- Publishes the state of a certain mirtebot -->
    <node pkg="robot_state_publisher" type="robot_state_publisher"  name="robot_state_publisher">
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="tf_prefix" value="$(arg uid)" />
    </node>

    <!-- Spawn a controller node for a certain mirtebot, make sure to remap the frame ids -->
    <node name="controller_spawner" output="screen" pkg="controller_manager"  type="spawner" args="joint_state_controller mobile_base_controller">
        <param name="base_frame_id" value="$(arg uid)/base_link" />
        <param name="odom_frame_id" value="$(arg uid)/odom" />        
    </node>

    <!-- Local and global costmaps with movebase navigation points -->
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
        <rosparam file="$(find mirte_2dnav)/config/costmap_common_params.yaml" command="load" ns="global_costmap" /> 
        <rosparam file="$(find mirte_2dnav)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
        <rosparam file="$(find mirte_2dnav)/config/local_costmap_params.yaml" command="load" />
        <rosparam file="$(find mirte_2dnav)/config/global_costmap_params.yaml" command="load" /> 
        <rosparam file="$(find mirte_2dnav)/config/base_local_planner_params.yaml" command="load" />
        <param name="global_costmap/robot_base_frame" value="$(arg uid)/base_link" />
        <param name="laser_scan_sensor/lidar_link" value="$(arg uid)/lidar_link" />
    </node>

  <include file="$(find mirte_gazebo)/launch/slam_toolbox.launch">
      <arg name="uid" value="$(arg robot_name)_$(arg id)"/>
      <param name="mode" value="localization"/>
  </include>

</launch>
